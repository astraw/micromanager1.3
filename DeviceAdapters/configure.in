#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT(FULL-PACKAGE-NAME, VERSION, BUG-REPORT-ADDRESS)
AC_CONFIG_SRCDIR([DemoCamera/DemoCamera.cpp])
#AC_CONFIG_HEADER([config.h])
AC_CANONICAL_HOST
AM_INIT_AUTOMAKE
AC_PROG_LIBTOOL

m4_include([../configure.common])


# Checks for header files.
# Only build Hamamatsu driver when header files are present
AC_MSG_CHECKING(for Hamamatsu Dcam)
AM_CONDITIONAL([BUILD_HAMAMATSU],[test -f "/Library/Frameworks/dcamapi.framework/Headers/dcamapi.h"])
if test -z "${BUILD_HAMAMATSU}" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# Same for PVCAM
AC_MSG_CHECKING(for Pvcam)
AM_CONDITIONAL([BUILD_PVCAM],[test -f "/Library/Frameworks/PVCAM.framework/Headers/pvcam.h"])
if test -z "${BUILD_PVCAM}" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# Same for QCam
AC_MSG_CHECKING(for QCam)
AM_CONDITIONAL([BUILD_QCAM],[test -f "/Library/Frameworks/QCam.framework/Headers/QCamApi.h"])
if test -z "${BUILD_QCAM}" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# and for Firewire cameras (libdc1394) 
# TODO: Need better test here
AC_MSG_CHECKING(for libdc1394)
AM_CONDITIONAL([BUILD_DC1394],[test -f "/usr/local/include/dc1394/control.h"])
if test -z "${BUILD_DC1394}" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# and for National Instrumenst boards 
AC_MSG_CHECKING(for NIDaQ)
AM_CONDITIONAL([BUILD_NIDAQ],[test -f "../../3rdParty/trunk/NationalInstruments/NI-DAQmxBase/includes/NIDAQmxBase.h"])
if test -z "${BUILD_NIDAQ}" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# and for libUSB 
AC_MSG_CHECKING(for libusb)
AC_FIND_FILE([usb.h], [/usr/include /usr/local/include], USBINCDIR)
if test x$USBINCDIR = xNO; then
   AC_MSG_RESULT([not found])
else
   AC_CHECK_HEADERS([$USBINCDIR/usb.h])
   if test -z "$LIBUSB" ; then
      AC_FIND_FILE([libusb.so], [/usr/lib /usr/local/lib], USBLIBDIR)
      if test x$USBLIBDIR = xNO; then
         AC_MSG_RESULT([lib not found])
      else
         LIBUSB="-L$USBLIBDIR -lusb"
      fi
   fi
fi
AC_SUBST(LIBUSB)
AM_CONDITIONAL([BUILD_USBMANAGER], [test -f $(LIBUSB)])

# Only build ... when the code is there
AM_CONDITIONAL([BUILD_TEST],[test -f "Test/Test.h"])
if test -f "Test/Test.h"; then
   TEST=Test
   TESTMAKEFILE="Test/Makefile"
else
   TEST=
   TESTMAKEFILE=
fi
AC_SUBST(TEST)

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE


# On the Mac we need some frameworks that can be in the way on Linux
case $host in 
   *apple-darwin*)
      AC_MSG_CHECKING(dcam linker flags)
      DCAMFRAMEWORKS="-framework dcamapi"
      AC_MSG_RESULT($DCAMFRAMEWORKS)
      AC_MSG_CHECKING(pvcam linker flags)
      PVCAMFRAMEWORKS="-framework PVCAM"
      AC_MSG_RESULT($PVCAMFRAMEWORKS)
      AC_MSG_CHECKING(Serial adapter linker flags)
      SERIALFRAMEWORKS="-framework CoreFoundation -framework IOKit"
      AC_MSG_RESULT($SERIALFRAMEWORKS)
esac
AC_SUBST(DCAMFRAMEWORKS)
AC_SUBST(PVCAMFRAMEWORKS)
AC_SUBST(SERIALFRAMEWORKS)

# Micro-Manager libraries have a prefix & suffix to make them unique.  These are defined here:
case $host in
   *-*-linux*)
   MMSUFFIX=".so.0"
   MMPREFIX="libmmgr_dal_"
   ;;
esac
if test -z "$MMSUFFIX"; then
  MMSUFFIX=""
fi
if test -z "$MMPREFIX"; then
  MMPREFIX="mmgr_dal_"
fi

AC_MSG_CHECKING(library suffix)
AC_MSG_RESULT($MMSUFFIX)
AC_SUBST(MMSUFFIX)
AC_MSG_CHECKING(library prefix)
AC_MSG_RESULT($MMPREFIX)
AC_SUBST(MMPREFIX)


# Checks for library functions.
AC_HEADER_STDC
AC_CHECK_FUNCS([memset])

AC_CONFIG_FILES(Makefile AOTF/Makefile Andor/Makefile Arduino/Makefile ASIFW1000/Makefile ASIStage/Makefile ASIWPTR/Makefile DTOpenLayer/Makefile DemoCamera/Makefile DemoRGBCamera/Makefile DemoStreamingCamera/Makefile SerialManager/Makefile SerialManagerUNIX/Makefile USBManager/Makefile LeicaDMI/Makefile Ludl/Makefile LudlLow/Makefile ZeissCAN/Makefile ZeissCAN29/Makefile Vincent/Makefile Conix/Makefile K8055/Makefile K8061/Makefile NIDAQ/Makefile Hamamatsu/Makefile PVCAM/Makefile Nikon/Makefile NikonTE2000/Makefile ParallelPort/Makefile Pecon/Makefile PrecisExcite/Makefile Sensicam/Makefile SpectralLMM5/Makefile SutterLambda/Makefile ThorlabsFilterWheel/Makefile Prior/Makefile PI/Makefile PI_GCS/Makefile Utilities/Makefile dc1394/Makefile QCam/Makefile Yokogawa/Makefile)
AC_OUTPUT
