#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT([Micro-Manager], 1.3.0, info@micro-manager.org)
#AC_CONFIG_HEADERS([config.h])
AC_CONFIG_SRCDIR([MMCore/MMCore.cpp])
AC_CANONICAL_HOST
AM_INIT_AUTOMAKE
AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL

m4_include([configure.common])

AC_MSG_CHECKING([whether to build the core])
AC_ARG_WITH([core], [AS_HELP_STRING([--with-core],[use --without-core to only build DeviceAdapters])], [], [with_core=yes])
if test "x$with_core" = xno; then
   AC_MSG_RESULT([no]);
else
   AC_MSG_RESULT([yes])
   #---------------------------------------------------
   # Check for ACE, static on Mac and libtool lib on Linux
   #---------------------------------------------------
   AC_MSG_CHECKING(for libACE)
   if test -z "$LIBACE" 
   then    
      case $host in
      *-*-linux*) 
      if test -r /usr/local/lib/libACE.la ; then
         LIBACE="/usr/local/lib/libACE.la"
      else
        if test -r /usr/lib/libACE.so ; then 
           LIBZCE="-lACE"i
         else
           AC_MSG_ERROR([not found, download from http://deuce.doc.wustl.edu/Download.html, build and install (cd ACE_wrappers \ mkdir build \ cd build \ ../configure \ make \ make install ) and rerun configure])
         fi
      fi
      ;;
     *-*-darwin*) 
     if test -r /usr/local/lib/libACE.a; then
         LIBACE="/usr/local/lib/libACE.a"
      else
         AC_MSG_ERROR([not found, download from http://deuce.doc.wustl.edu/Download.html, build and install (cd ACE_wrappers \ mkdir build \ cd build \ ../configure --enable-static\ make \ make install ) and rerun configure])
      fi
      ;;
      esac
   fi
   AC_MSG_RESULT($LIBACE)
   AC_SUBST(LIBACE)

   # Check for Siwg.
   AC_CHECK_PROGS(SWIG, swig)
   if test "$SWIG" = "" ; then
      AC_MSG_ERROR([not found, swig is needed to build this application.  Please download (http://www.swig.org/download.html) and install])
   fi

fi
AM_CONDITIONAL([BUILD_APP], test "x$with_core" = xyes)

#----------------------------------------------------------------
# Look for java binaries and headers
#----------------------------------------------------------------

AC_CHECK_PROGS(JAVA, java kaffe guavac)
AC_CHECK_PROGS(JAVAC, javac)
AC_CHECK_PROGS(JAR, jar)

# Find Java header files:
AC_MSG_CHECKING(for java include file jni.h)
AC_ARG_WITH([javaincl], [AS_HELP_STRING([--with-javaincl=path],[set location of Java include directory])], [JAVAINCDIR="$withval"], [JAVAINCDIR=])

if test -z "$JAVAINCDIR"; then  
   JAVAINCDIR="/usr/j2sdk*/include /usr/local/j2sdk*/include /usr/jdk*/include /usr/local/jdk*/include /opt/j2sdk*/include /opt/jdk*/include /usr/java/include /usr/java/j2sdk*/include /usr/java/jdk*/include /usr/local/java/include /opt/java/include /usr/include/java /usr/local/include/java /usr/lib/java/include /usr/lib/jvm/java*/include /usr/include/kaffe /usr/local/include/kaffe /usr/include"                                                                             
  # Add in default installation directory on Windows for Cygwin              
  case $host in                                                              
  *-*-cygwin* | *-*-mingw*) JAVAINCDIR="c:/Program*Files/Java/jdk*/include d:/Program*Files/Java/jdk*/include c:/j2sdk*/include d:/j2sdk*/include c:/jdk*/include d:/jdk*/include $JAVAINCDIR";;
  *-*-darwin*) JAVAINCDIR="/System/Library/Frameworks/JavaVM.framework/Headers $JAVAINCDIR";;
  *);;                                                                       
  esac                                                                       
fi  

JAVAINC=""                                                                   
for d in $JAVAINCDIR ; do                                                    
  if test -r "$d/jni.h" ; then 
    AC_MSG_RESULT($d)
    JAVAINCDIR=$d
    JAVAINC=-I\"$d\"
    break
  fi
done

if test "$JAVAINC" = "" ; then
  AC_MSG_RESULT(not found)
else
  # now look for <arch>/jni_md.h
  AC_MSG_CHECKING(for java include file jni_md.h)
  JAVAMDDIR=`find "$JAVAINCDIR" -follow -name jni_md.h -print`
  if test "$JAVAMDDIR" = "" ; then
    AC_MSG_RESULT(not found)
  else
    JAVAMDDIR=`dirname "$JAVAMDDIR" | tail -n 1`
    JAVAINC="${JAVAINC} -I\"$JAVAMDDIR\""
    AC_MSG_RESULT($JAVAMDDIR)
  fi
fi

# Java on Windows platforms including Cygwin doesn't use libname.dll, rather name.dll when loading dlls
case $host in
*-*-cygwin* | *-*-mingw*) JAVALIBRARYPREFIX="";;
*)JAVALIBRARYPREFIX="lib";;
esac

# Java on Mac OS X tweaks
case $host in
*-*-darwin*) 
    JAVASO=".jnilib"
    JAVALDSHARED='$(CC)'
    JAVACXXSHARED='$(CXX)'
    ;;
*)
    # JAVASO='$(SO)'
    JAVASO='.so'
    JAVALDSHARED='$(LDSHARED)'
    JAVACXXSHARED='$(CXXSHARED)'
    ;;
esac


# Export variables to Makefile
AC_SUBST(JAVAINC)
AC_SUBST(JAVADYNAMICLINKING)
AC_SUBST(JAVALIBRARYPREFIX)
AC_SUBST(JAVASO)
AC_SUBST(JAVALDSHARED)
AC_SUBST(JAVACXXSHARED)
AC_SUBST(JAVACFLAGS)
AC_SUBST(I5DJARPATH)

# Checks for libraries.
AC_CHECK_LIB(dl, dlopen)   # Dynamic linking for SunOS/Solaris and SYSV

# Checks for header files.
AC_HEADER_STDC

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE

# Checks for library functions.
AC_HEADER_STDC
AC_CHECK_FUNCS([memset])

# Check for Device Adapters with proprietary code
AC_MSG_CHECKING(for proprietary DeviceAdapters)
AM_CONDITIONAL(BUILD_SECRETDEVICEADAPTERS, test -f "SecretDeviceAdapters/configure.in")
if test -z "${BUILD_SECRETDEVICEADAPTERS}" ; then
   AC_CONFIG_SUBDIRS([SecretDeviceAdapters])
fi

AC_CONFIG_SUBDIRS(DeviceAdapters)
AC_OUTPUT(Makefile ModuleTest/Makefile MMCore/Makefile MMCoreJ_wrap/Makefile Test_MMCore/Makefile Test_Serial/Makefile mmstudio/Makefile Tracking/Makefile Bleach/Makefile autofocus/Makefile MMDevice/Makefile bin/Makefile)
